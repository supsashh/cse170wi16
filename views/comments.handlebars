<!doctype html>

<html>
<head>
	<title>GoTo</title>	
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
	<link href="/css/goto.css" rel="stylesheet">

    <script src="/js/jquery-1.11.0.js"></script> 
	<script src="/js/bootstrap.min.js"></script>
	<script src="/js/portfolio.pack.min.js"></script>
	<script src="/js/jquery.mobile.custom.min.js"></script>
	<script src="/js/goto.js"></script>     
</head>

<body>
    <script>
        function statusChangeCallback(response) {
        // The response object is returned with a status field that lets the
        // app know the current login status of the person.
        // Full docs on the response object can be found in the documentation
        // for FB.getLoginStatus().
        if (response.status === 'connected') {
                // Logged into your app and Facebook.
                apiCall();
        } else if (response.status === 'not_authorized') {
                // The person is logged into Facebook, but not your app.
                window.location.href= "/";
        } else {
                // The person is not logged into Facebook, so we're not sure if
                // they are logged into this app or not.
                window.location.href= "/";
        }
    }

    // This function is called when someone finishes with the Login
    // Button.  See the onlogin handler attached to it in the sample
    // code below.
    function checkLoginState() {
        FB.getLoginStatus(function(response) {
                statusChangeCallback(response);
        });
    }

    window.fbAsyncInit = function() {
        FB.init({
            appId      : '1018516261547542',
            cookie     : true,  // enable cookies to allow the server to access
                                             // the session
            xfbml      : true,  // parse social plugins on this page
            version    : 'v2.2' // use version 2.2
        });

        // Now that we've initialized the JavaScript SDK, we call
        // FB.getLoginStatus().  This function gets the state of the
        // person visiting this page and can return one of three states to
        // the callback you provide.  They can be:
        //
        // 1. Logged into your app ('connected')
        // 2. Logged into Facebook, but not your app ('not_authorized')
        // 3. Not logged into Facebook and can't tell if they are logged into
        //    your app or not.
        //
        // These three cases are handled in the callback function.

        FB.getLoginStatus(function(response) {
        statusChangeCallback(response);
        });

        };

        // Load the SDK asynchronously
        (function(d, s, id) {
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) return;
            js = d.createElement(s); js.id = id;
            js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.2";
            fjs.parentNode.insertBefore(js, fjs);
        }(document, 'script', 'facebook-jssdk'));

        function apiCall() {
                FB.getAuthResponse();
                FB.api('/me', 'GET',  {"fields":"name,picture{url}"},  function(response) {
                    var pics = document.getElementsByClassName("profile-pic");
                    var names = document.getElementsByClassName("profile-name");
                    var i;
                    for (i = 0; i < pics.length; i++) {
                    pics[i].src = response.picture.data.url;
                        names[i].innerHTML = response.name;
                    }
            }
            );
        }
    </script>
	<div class="container">
		<nav class="navbar navbar-default navbar-fixed-top">
			<a class="navbar-brand glyphicon glyphicon-arrow-left" aria-hidden="true" href="javascript:history.back()"></a>
			<a href="#" class="navbar-brand commentheader">Comments</a>
		</nav>
	</div>
	
    <ul class="media-list commentbox">
    	{{#each comments}}
            {{#if commenter-image}}
            <li class="media">
                <a class="pull-left" href="/profile/{{commenter}}">
                    <img class="media-object scaled-pic img-circle" src="/images/{{commenter-image}}" alt="profile">
                </a>
                <div class="media-body">
                    <div class="well well-sm">
                        <a class="media-heading reviews" href="/profile/{{commenter}}">{{commenter}}
                        </a>
            {{else}}
            <li class="media">
                <a class="pull-left" href="/profile">
                	<img class="media-object profile-pic img-circle" src="" alt="profile">
                </a>
                <div class="media-body">
                    <div class="well well-sm">
                        <a class="media-heading reviews profile-name" href="/profile">
                        </a>
                        {{/if}}
                        <p class="media-comment">
                            {{text}}
                        </p>
                    </div>              
                </div>
            </li>
    	{{/each}}
    </ul>

<div id="footer">    
	<div class="navbar-fixed-bottom">
		<div class="row bottom-nav" id="bottomNav">
    		<form class="addcomment-form">
  				<div class="input-group commentform">
    				<label for="addcomment"></label>
    				<input type="text" class="form-control" id="addcomment" placeholder="Add a comment">
    				<span class="input-group-btn commentsend">
            			<button type="submit" class="btn btn-default">Send
            			</button>                
        			</span>
  				</div>
    		</form>
		</div>
	</div>
</div>


	
</body>

</html>